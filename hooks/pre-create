#!/usr/bin/env python3
""" This script is called by tusd as the user initiates an upload. """

import json
import os
import sys
import requests
from loguru import logger

SESSION_COOKIE = 'fk:session'

FK_API = os.environ.get('FK_API', 'http://localhost:8000')
FK_API_KEY = os.environ.get('FK_API_KEY', None)

logger.configure(handlers = [{"sink": sys.stderr, "serialize": True}])

class AuthenticationException(Exception):
    """ Raised if the user could not be authenticated."""

def refuse(string):
    """ Reject an incoming request. The output given to stdout will be returned
    as part of the error message which is presently displayed on the front end.
    The output given to standard error is logged by the upload receiver. """
    logger.warning(string)
    sys.exit(1)

def authenticate(session_id: str) -> str:
    user_request = requests.get(f'{FK_API}/auth/user', cookies={SESSION_COOKIE: session_id})
    user_info = user_request.json()

    if user_info['authenticated'] is True:
        return user_info['user']['email']

    raise AuthenticationException("Unauthorized")

def _parse_cookies(cookie_header: str) -> dict:
    return dict([tuple(x.split('=')) for x in cookie_header.split('; ')])

if __name__ == '__main__':
    logger.info('pre-create hook starting')

    try:
        request = json.load(sys.stdin)
        print(json.dumps(request, indent=2), file=sys.stderr)

        try:
            filename = request['Upload']['MetaData']['filename']
        except KeyError as Exc:
            raise AuthenticationException('Missing original filename!') from Exc

        cookies = _parse_cookies(request['HTTPUpload']['Header']['Cookie'])
        email = authenticate(cookies[SESSION_COOKIE])
        logger = logger.bind(email=email)

        if 'X-Forwarded-For' in request['HTTPRequest']['Header']:
            logger = logger.bind(remote_addr=request['HTTPRequest']['Header']['X-Forwarded-For'])
        else:
            logger = logger.bind(remote_addr=request['HTTPRequest']['RemoteAddr'])

        logger.info(f'successfully authenticated {email}')
    except AuthenticationException as e:
        refuse(e)
