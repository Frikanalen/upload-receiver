#!/usr/bin/env python3
"""This script is invoked by tusd upon successful reception of a complete file."""

from dataclasses import dataclass
import logging
import os
from pathlib import Path
import sys

from pprint import pp

from pydantic import BaseModel
from hookschema import HookRequest


class MetaData(BaseModel):
    """Metadata for the upload, including video ID and original file name."""

    videoID: str
    origFileName: str
    uploadToken: str


@dataclass
class CompletedUpload:
    """Data structure to hold information about a completed upload."""

    video_id: str
    orig_filename: str
    path: str


logging.basicConfig(level=logging.DEBUG)


def read_upload_status() -> CompletedUpload:
    """Reads the JSON data from tusd, and returns a tuple of numeric video ID, original
    file name, and location of the uploaded file."""

    hook_request = HookRequest.model_validate_json(sys.stdin.read())

    upload = hook_request.Event.Upload
    pp(upload.model_dump(), stream=sys.stderr)

    metadata = MetaData.model_validate(upload.MetaData_1.model_dump())

    video_id = metadata.videoID
    orig_filename = metadata.origFileName
    path = upload.Storage["Path"]

    return CompletedUpload(video_id=video_id, orig_filename=orig_filename, path=path)


watchfolder = Path("/srv/fkupload/finished_uploads")


def upload_video(video_id: str, path: str, orig_filename: str):
    """Creates a temporary directory on file01, copies the file, and moves it
    into the move_and_process watchfolder."""

    # todo for tomorrow: figure out how this file can be copied without
    # risking inotify starting work on a partial file.
    # Is this just massively overcomplicated because it used to be via scp?
    legacy_watchfolder = watchfolder / video_id / orig_filename

    logging.debug(f"Copying {path} to {legacy_watchfolder}...")
    os.rename(path, legacy_watchfolder)


if __name__ == "__main__":
    logging.info("Pre-finish hook starting")
    upload = read_upload_status()
    logging.info(upload)
    upload_video(upload.video_id, upload.path, upload.orig_filename)
    logging.info("Copy complete")
